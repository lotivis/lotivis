name: Node.js Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get NPM Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run copy-to-dist
      - run: npm test
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: echo "Printing current version:"
      - run: echo ${{ steps.package-version.outputs.current-version }}

      - name: 'Purge CSS'
        uses: indiesdev/curl@v1
        with:
          url: https://purge.jsdelivr.net/npm/lotivis@${{ steps.package-version.outputs.current-version }}/dist/lotivis.css
          accept: 200
          timeout: 10000

      - name: 'Purge JS Min'
        uses: indiesdev/curl@v1
        with:
          url: https://purge.jsdelivr.net/npm/lotivis@${{ steps.package-version.outputs.current-version }}/dist/lotivis.min.js
          accept: 200
          timeout: 10000

      - name: 'Purge JS'
        uses: indiesdev/curl@v1
        with:
          url: https://purge.jsdelivr.net/npm/lotivis@${{ steps.package-version.outputs.current-version }}/dist/lotivis.js
          accept: 200
          timeout: 10000

      - name: 'Purge JS Map'
        uses: indiesdev/curl@v1
        with:
          url: https://purge.jsdelivr.net/npm/lotivis@${{ steps.package-version.outputs.current-version }}/dist/lotivis.js.map
          accept: 200
          timeout: 10000

#      - name: 'Use response'
#        run: echo ${{ steps.api.outputs.response }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
